---
- name: Deploy Node
  hosts: all
  become: no

  vars:
    PATH: /home/ubuntu
    USER: ubuntu


  tasks:

    - name: Print current working directory and list files
      shell: |
        pwd
        ls
        sudo rm -rf {{ PATH }}/data/*
      register: shell_output
      ignore_errors: yes
      # Print current working directory and list files

    - name: Create directory for data 
      file:
        path: "{{ PATH }}/data"
        state: directory
        owner: "{{ USER }}"
        group: "{{ USER }}"
        mode: '0755'
      # Create directory for data 

    - name: Copy config config files to server
      copy:
        src: config/
        dest: "{{ PATH }}/data"
        force: yes
        owner: "{{ USER }}"
        group: "{{ USER }}"
      # Copy config config files to server
    - name: Source system profile and .env
      shell: |
        source /etc/profile
        cd /home/ubuntu/data
        source .env
      args:
        executable: /bin/bash

    - name: Clone callisto repository
      shell: |
        cd /home/ubuntu/data
        git clone -b treasurenet-v2.0.2 https://github.com/treasurenetprotocol/callisto.git
      args:
        executable: /bin/bash

    - name: Install callisto (make install)
      shell: |
        cd /home/ubuntu/data/callisto
        make install
      args:
        executable: /bin/bash

    - name: Execute schema SQL files via psql
      shell: |
        cd /home/ubuntu/data/callisto/database/schema
        for sql_file in 00-cosmos.sql 01-auth.sql 02-bank.sql 03-staking.sql 04-consensus.sql 05-mint.sql 06-distribution.sql 07-pricefeed.sql 08-gov.sql 09-modules.sql 10-slashing.sql 12-feegrant.sql; do
          echo "Executing ${sql_file}..."
          PGPASSWORD=${DATABASE_PASSWORD} psql -h ${DATABASE_HOST} -p 5432 -d bdjuno -U postgres -f ${sql_file}
        done
      args:
        executable: /bin/bash

    - name: Initialize bdjuno and copy config file
      shell: |
        
        bdjuno init
        cp /home/ubuntu/data/config.yaml /home/ubuntu/.bdjuno/config.yaml
      args:
        executable: /bin/bash

    - name: Start bdjuno parsing in background
      shell: |
        nohup bdjuno parse >> /home/ubuntu/data/bdjuno.log 2>&1 &
      args:
        executable: /bin/bash

    - name: Check if docker-compose is running
      shell: docker-compose ps -q
      args:
        chdir: /home/ubuntu/data
      register: docker_compose_status
      changed_when: false

    - name: Bring down docker-compose services if running
      shell: docker-compose down -v
      args:
        chdir: /home/ubuntu/data
      when: docker_compose_status.stdout != ""

    - name: Bring up docker-compose services
      shell: |
        cd /home/ubuntu/data
        chmod u+x *
        docker-compose up -d
      args:
        executable: /bin/bash

    - name: Install Hasura CLI
      shell: |
        curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash
      args:
        executable: /bin/bash

    - name: Apply Hasura metadata
      shell: |
        cd /home/ubuntu/data/callisto/hasura
        hasura metadata apply --endpoint http://localhost:3011 --admin-secret postgres
      args:
        executable: /bin/bash

    - name: Clone treasurenet-bigdipper repository
      shell: |
        cd /home/ubuntu/data
        git clone -b release/1.0.0 https://github.com/treasurenetprotocol/treasurenet-bigdipper.git
      args:
        executable: /bin/bash

    - name: Setup and build treasurenet-bigdipper
      shell: |
        cd /home/ubuntu/data/treasurenet-bigdipper
        cd nginx
        cp /home/ubuntu/data/cloudflare.pem ./certs/
        cp /home/ubuntu/data/cloudflare.key ./certs/
        docker-compose up -d
        cp /home/ubuntu/data/.env1 ./
        mv .env1 .env
        npm install
        npm install -g pm2
        npm run build
        pm2 start "npm run start" --name cosmosexplorer
      args:
        executable: /bin/bash
